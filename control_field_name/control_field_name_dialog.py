# -*- coding: utf-8 -*-
"""
/***************************************************************************
 ControlFieldNameDialog
                                 A QGIS plugin
 Little Toolbox which check if fieldname is valid
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2022-04-12
        git sha              : $Format:%H$
        copyright            : (C) 2022 by Alex Wieschmann (GIS-Akademie)
        email                : wieschmann@gis-akademie.de
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets

# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'control_field_name_dialog_base.ui'))


class ControlFieldNameDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(ControlFieldNameDialog, self).__init__(parent)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)

        self.btnGo.clicked.connect(self.check_fc_name)

    def check_fc_name(self):

        org_name = self.txtInput.toPlainText()
        """
        Use: Die Funktion benennt eine Texteingabe um, so dass sie ArcGIS-FC konform ist
        :param org_name: Der Eingabe Textstring (Typ: Text)
        :return: Es wird ein Text zurückgegeben
        """
        try:
            org_name = org_name.lower().replace(u"ä", "ae")
            org_name = org_name.lower().replace(u"ö", "oe")
            org_name = org_name.lower().replace(u"ü", "ue")
            org_name = org_name.lower().replace(u"Ü", "Ue")
            org_name = org_name.lower().replace(u"Ä", "Ae")
            org_name = org_name.lower().replace(u"Ö", "Oe")
        except:
            pass
        goodsigntuple = "abcdefghijklmnopqrstuvwxyz0123456789_"
        output_name = ""
        for buchstabe in org_name:
            if buchstabe.lower() in goodsigntuple:
                output_name += buchstabe
            else:
                output_name += "_"
        output_name = output_name.replace("__", "_")
        self.txtInput.setPlainText(output_name.lstrip("0123456789_")[:10])
